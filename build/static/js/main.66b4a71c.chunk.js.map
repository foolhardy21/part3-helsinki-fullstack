{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","title","name","handleFunction","value","onChange","PersonForm","addAccount","newName","handlenameChange","newNumber","handlenumberChange","onSubmit","type","Persons","personstoshow","deleteAcc","map","person","number","id","onClick","Notification","message","includes","className","baseUrl","axios","get","then","response","data","nameobject","post","objectid","delete","toString","newobject","put","App","useState","persons","setPersons","setNewName","setNewNumber","searchName","setSearchName","confirmMessage","setConfirmMessage","useEffect","personService","initialPersons","filter","event","target","preventDefault","unique","find","returnedPerson","concat","setTimeout","window","confirm","changedPerson","responsedata","catch","error","console","log","parseInt","personname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66b4a71c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({title,name,handleFunction}) => {\r\n  return (\r\n    <div>{title}<input value={name} onChange={handleFunction} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({addAccount,newName,handlenameChange,newNumber,handlenumberChange}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={addAccount}>\r\n        <div>\r\n          name: <input value={newName} onChange={handlenameChange}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handlenumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type='submit'>add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Persons = ({personstoshow, deleteAcc}) => {\r\n\r\n  return (\r\n    <div>{personstoshow.map(person =>\r\n      <div key={person.id}>{person.name} {person.number}\r\n      <button type=\"button\" value={person.id} onClick={deleteAcc}>\r\n      delete</button>\r\n      </div>\r\n    )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n  if(message === null)\r\n  return null;\r\n  if(message.includes(`Added`) || message.includes(`Updated`))\r\n  return (\r\n    <div className='confirmm'>{message}</div>\r\n  )\r\n  if(message.includes(`already`))\r\n  return (\r\n    <div className='error'>{message}</div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (nameobject) => {\r\n  const request = axios.post(baseUrl,nameobject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (objectid) => {\r\n    const request = axios.delete(baseUrl+`/`+objectid.toString())\r\n    return request.then(response => response)\r\n}\r\n\r\nconst update = (newobject) => {\r\n  const request = axios.put(baseUrl+`/`+newobject.id,newobject)\r\n  return request\r\n  .then(response => response.data)\r\n\r\n}\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  remove: remove,\r\n  update: update\r\n}\r\n","import React, {useState,useEffect} from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App= () => {\n  const [persons,setPersons] = useState([])\n  const [newName,setNewName] = useState('')\n  const [newNumber,setNewNumber] = useState('')\n  const [searchName,setSearchName] = useState('')\n  const [confirmMessage,setConfirmMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  },[])\n\n  const personstoshow = persons.filter(person => person.name.includes(searchName))\n\n  const deleteAccount = (event) => {\n    event.preventDefault()\n    const id = parseInt(event.target.value)\n    const personname = persons.find(person => person.id === id)\n    if(window.confirm(`Delete ${personname.name}?`)){\n      personService\n      .remove(id)\n      .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n\n  }\n  const handleSearchChange = (event) => {\n    setSearchName(event.target.value)\n  }\n  const handlenameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handlenumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const addAccount = (event) => {\n    event.preventDefault()\n    var unique = persons.find(person => person.name === newName)\n    if(typeof unique === 'undefined'){\n    const nameobject = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n    .create(nameobject)\n    .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n    })\n    setConfirmMessage(`Added ${newName}.`)\n    setTimeout(() => {\n      setConfirmMessage(null)\n    },5000)\n\n  }\n  else {\n       if(window.confirm(`${newName} is already added to the phonebook,replace the old number with the new one ?`))\n       {\n         const changedPerson = {...unique,number:newNumber}\n         personService.update(changedPerson)\n         .then(responsedata => {\n           setPersons(persons.map(person => person.id===responsedata.id?responsedata:person))\n           setConfirmMessage(`Updated ${newName}.`)\n           setTimeout(() => {\n             setConfirmMessage(null)\n           },5000)\n\n        })\n         .catch(error => {\n           console.log(newName)\n           setPersons(persons.filter(person => person.name !== newName))\n           setConfirmMessage(`Information of ${newName} was already deleted from the server`)\n           setTimeout(() => {\n             setConfirmMessage(null)\n           },5000)\n\n         })\n\n       }\n  }\n\n  setNewName('')\n  setNewNumber('')\n  }\n\n  return (\n\n      <div>\n      <h2>Phonebook</h2>\n      <Notification message={confirmMessage} />\n      <Filter title=\"filter shown with\"\n      name={searchName} handleFunction={handleSearchChange} />\n      <h2>Add a New</h2>\n      <PersonForm addAccount={addAccount} newName={newName}\n      handlenameChange={handlenameChange} newNumber={newNumber}\n      handlenumberChange={handlenumberChange} />\n      <h2>Numbers</h2>\n      <Persons personstoshow={personstoshow} deleteAcc={deleteAccount}/>\n      </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport style from './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}